server:
  port: 8080

spring:
  application:
    name: author

jwt:
  secret: your_service_jwt_secret_key
  expiration: 86400000 # 1 day in milliseconds

management:
endpoints:
  web:
    exposure:
      include: "*"      

---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: author
#<<< EDA / Topic Name
          destination: ktlib
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: ktlib
#>>> EDA / Topic Name
          contentType: application/json

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# Spring Security 없이 actuator를 열어야 한다면:
management.security.enabled: false

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8082

---


jwt:
  secret: your_service_jwt_secret_key
  expiration: 86400000 # 1 day in milliseconds

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: author
          destination: ktlib
          contentType: application/json
        event-out:
          destination: ktlib
          contentType: application/json



management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# Spring Security 없이 actuator를 열어야 한다면:
management.security.enabled: false